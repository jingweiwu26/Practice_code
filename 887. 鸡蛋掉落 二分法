class Solution:
    def superEggDrop(self, k: int, n: int) -> int:
        #状态 K个蛋 N个楼
        #选择 蛋碎了 蛋没碎
        dp=[[0] * (n+1) for _ in range(k+1)]
        #设定边界
        #蛋只有一颗的情况
        for j in range(1,n+1):
            dp[1][j] = j
        #楼只有一层的情况
        for i in range(1,k+1):
            dp[i][1] = 1

        for i in range(2,k+1):
            for j in range(2,n+1):
                dp[i][j] = j # 最坏情况
                lo = 1
                hi = j
                while lo <= hi:
                    mid = (lo + hi) // 2
                    broken = dp[i-1][mid-1]
                    not_broken = dp[i][j-mid]
                    if broken > not_broken:
                        hi = mid -1
                    else:
                        lo = mid +1
                    
                for x in (lo, hi):
                    dp[i][j] = min(dp[i][j],  1+max(dp[i-1][x-1], dp[i][j-x]))
        return dp[k][n]