class Solution(object):
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        if not needle:
            return 0
        elif not haystack:
            return -1
        size_h=len(haystack)
        size_n=len(needle)
        if size_n>size_h:
            return -1
        if size_n==size_h:
            return 0 if haystack==needle else -1

        for i in range(size_h):
            if haystack[i]==needle[0]:
                for j in range(min(size_n, size_h-i)):
                    if needle[j]!=haystack[i+j]:
                        break
                if j+1==size_n and haystack[i+j]==needle[j]:
                    return i
        else:
            return -1
      
     
class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        
        if haystack == needle:
            return 0
        
        for i in range(len(haystack)-len(needle) +1):
            if haystack[i:i+len(needle)] == needle:
                return i

        return -1
