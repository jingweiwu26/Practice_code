class Solution:
    def minEatingSpeed(self, piles: List[int], h: int) -> int:
        
        l=1
        r=max(piles)
        while l <= r:
            mid = (l+r)//2
            if self.f(mid, piles) <h:
                r = mid- 1
            elif self.f(mid, piles) >h:
                l = mid +1
            else:
                r= mid -1 # 左边界
                
        return l
        
        
    def f(self, s, piles):
        c=0
        for i in piles:
            c+= (i+s-1)//s

        return c
            
        # ceil 