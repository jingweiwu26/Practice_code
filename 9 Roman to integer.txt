class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """
        dict = {'I':1, 'V':5,'X':10, 'L':50, 'C':100, 'D':500, 'M':1000}
        res=0
        size=len(s)
        for i in s:
            res+=dict[i]
        for j in range(size-1):
            if dict[s[j]]<dict[s[j+1]]:
                res-= 2*dict[s[j]]
        return res
    
class Solution:
    def romanToInt(self, s: str) -> int:
        
        res = 0
        
        mapping = {'I': 1,
                   'V': 5,
                   'X': 10,
                   'L': 50,
                   'C': 100,
                   'D': 500,
                   'M': 1000}
        
        for idx in range(len(s)):
            v = mapping.get(s[idx])
            if s[idx] == 'I' and idx < len(s) -1 and (s[idx+1] == 'V' or s[idx+1] == 'X'):
                v *= -1
            if s[idx] == 'X' and idx < len(s) -1 and (s[idx+1] == 'L' or s[idx+1] == 'C'):
                v *= -1
            if s[idx] == 'C' and idx < len(s) -1 and (s[idx+1] == 'D' or s[idx+1] == 'M'):
                v *= -1
            res += v
        return res 
