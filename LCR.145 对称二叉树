# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def checkSymmetricTree(self, root: Optional[TreeNode]) -> bool:
        
        def helper(p,q):
            if not p and not q:
                return True
            elif p is None and q is not None:
                return False
            elif p is not None and q is None:
                return False
            elif p.val != q.val:
                return False
            
            return helper(p.left, q.right) and helper(p.right, q.left)
        
        if root is None:
            return True
        else:
            return helper(root.left, root.right)
    