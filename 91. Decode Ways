class Solution:
    def numDecodings(self, s: str) -> int:
        if s.startswith('0'):
            return 0
        
        if len(s) == 1:
            return 1
        
        dp = [1] * len(s)
        
        if int(s[1]) == 0 and int(s[0]) not in (1, 2):
            return 0
        elif int(s[0:2]) > 26:
            dp[1] = 1
        elif 10 <= int(s[0:2]) <= 26 and int(s[0:2]) not in (10, 20):
            dp[1] = 2
        elif int(s[0:2]) in (10, 20):
            dp[1] = 1
        else:
            return 0

        if len(s) == 2:
            return dp[1]
        
        for i in range(2, len(s)):
            if s[i] == '0':
                if s[i-1] not in ('1', '2'):
                    return 0
                else:
                    dp[i] = dp[i-2]
            else:
                if 10 <= int(s[i-1:i+1]) <= 26:
                    dp[i] = dp[i-1] + dp[i-2]
                else:
                    dp[i] = dp[i-1]
        return dp[-1]
